{"ast":null,"code":"import _classCallCheck from \"/Users/thanhthanhbui/Desktop/dpl/week7/day1/blog-refactor/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thanhthanhbui/Desktop/dpl/week7/day1/blog-refactor/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/thanhthanhbui/Desktop/dpl/week7/day1/blog-refactor/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/thanhthanhbui/Desktop/dpl/week7/day1/blog-refactor/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thanhthanhbui/Desktop/dpl/week7/day1/blog-refactor/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/thanhthanhbui/Desktop/dpl/week7/day1/blog-refactor/client/src/components/FetchBlogs.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport Blogs from './Blogs';\nimport Blog from './Blog';\nimport { getBlogs } from '../reducers/blogs';\nimport { Loader, Segment, Dimmer } from 'semantic-ui-react';\nimport NoMatch from './NoMatch';\n\nvar FetchBlogs =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FetchBlogs, _React$Component);\n\n  function FetchBlogs() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FetchBlogs);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FetchBlogs)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loaded: false\n    };\n\n    _this.setLoaded = function () {\n      _this.setState({\n        loaded: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(FetchBlogs, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatch(getBlogs(this.setLoaded));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var loaded = this.state.loaded;\n\n      if (loaded) {\n        return React.createElement(Switch, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, React.createElement(Route, {\n          exact: true,\n          path: \"/blogs\",\n          component: Blogs,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }), React.createElement(Route, {\n          exact: true,\n          path: \"/blogs/:id\",\n          component: Blog,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }), React.createElement(Route, {\n          component: NoMatch,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(Segment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(Dimmer, {\n          active: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(Loader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        })));\n      }\n    }\n  }]);\n\n  return FetchBlogs;\n}(React.Component);\n\nexport default connect()(FetchBlogs);","map":{"version":3,"sources":["/Users/thanhthanhbui/Desktop/dpl/week7/day1/blog-refactor/client/src/components/FetchBlogs.js"],"names":["React","connect","Route","Blogs","Blog","getBlogs","Loader","Segment","Dimmer","NoMatch","FetchBlogs","state","loaded","setLoaded","setState","props","dispatch","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAyB,aAAzB;AACA,SAASC,KAAT,QAAuB,kBAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,QAAT,QAA0B,mBAA1B;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,MAA1B,QAAyC,mBAAzC;AACA,OAAOC,OAAP,MAAoB,WAApB;;IAEMC,U;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AAAEC,MAAAA,MAAM,EAAE;AAAV,K;;UAMRC,S,GAAY,YAAM;AAChB,YAAKC,QAAL,CAAc;AAAEF,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD,K;;;;;;;wCANmB;AAClB,WAAKG,KAAL,CAAWC,QAAX,CAAoBX,QAAQ,CAAC,KAAKQ,SAAN,CAA5B;AACD;;;6BAMQ;AAAA,UACCD,MADD,GACa,KAAKD,KADlB,CACCC,MADD;;AAGP,UAAIA,MAAJ,EAAY;AACV,eACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,QAAlB;AAA2B,UAAA,SAAS,EAAET,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,oBAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,YAAlB;AAA+B,UAAA,SAAS,EAAEC,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE,oBAAC,KAAD;AAAO,UAAA,SAAS,EAAEK,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,CADF;AAOD,OARD,MAQO;AACL,eACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,MAAD;AAAQ,UAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,CADF;AAOD;AACF;;;;EA/BsBT,KAAK,CAACiB,S;;AAkC/B,eAAehB,OAAO,GAAGS,UAAH,CAAtB","sourcesContent":["import React from 'react'\nimport { connect, } from 'react-redux'\nimport { Route, } from 'react-router-dom'\nimport Blogs from './Blogs'\nimport Blog from './Blog'\nimport { getBlogs, } from '../reducers/blogs'\nimport { Loader, Segment, Dimmer, } from 'semantic-ui-react'\nimport NoMatch from './NoMatch';\n\nclass FetchBlogs extends React.Component {\n  state = { loaded: false, }\n\n  componentDidMount() {\n    this.props.dispatch(getBlogs(this.setLoaded));\n  }\n\n  setLoaded = () => {\n    this.setState({ loaded: true, });\n  }\n\n  render() {\n    const { loaded, } = this.state;\n\n    if (loaded) {\n      return (\n        <Switch>\n          <Route exact path=\"/blogs\" component={Blogs} />\n          <Route exact path=\"/blogs/:id\" component={Blog} />\n          <Route component={NoMatch} />\n        </Switch>\n      )\n    } else {\n      return (\n        <Segment>\n          <Dimmer active>\n            <Loader />\n          </Dimmer>\n        </Segment>\n      )\n    }\n  }\n}\n\nexport default connect()(FetchBlogs);"]},"metadata":{},"sourceType":"module"}